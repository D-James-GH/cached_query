"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[845],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),u=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=u(a),h=r,y=p["".concat(c,".").concat(h)]||p[h]||d[h]||l;return a?n.createElement(y,i(i({ref:t},s),{},{components:a})):n.createElement(y,i({ref:t},s))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5181:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const l={},i="Global Cache",o={unversionedId:"docs/guides/global-cache",id:"docs/guides/global-cache",title:"Global Cache",description:"The instance of the query cache is available through a singleton CachedQuery.instance. It has a few useful utilities on it.",source:"@site/docs/docs/guides/06-global-cache.md",sourceDirName:"docs/guides",slug:"/docs/guides/global-cache",permalink:"/docs/guides/global-cache",draft:!1,editUrl:"https://github.com/D-James-GH/cached_query/tree/main/docs/docs/docs/guides/06-global-cache.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"docs",previous:{title:"Mutations",permalink:"/docs/guides/mutations"},next:{title:"Infinite Query",permalink:"/docs/guides/infinite-query"}},c={},u=[{value:"Where Query",id:"where-query",level:2},{value:"Re-fetch, Invalidate and Delete",id:"re-fetch-invalidate-and-delete",level:2},{value:"Manually Adding and Removing Queries",id:"manually-adding-and-removing-queries",level:2},{value:"Updating the Cache",id:"updating-the-cache",level:2}],s={toc:u};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"global-cache"},"Global Cache"),(0,r.kt)("p",null,"The instance of the query cache is available through a singleton ",(0,r.kt)("inlineCode",{parentName:"p"},"CachedQuery.instance"),". It has a few useful utilities on it."),(0,r.kt)("h2",{id:"where-query"},"Where Query"),(0,r.kt)("p",null,"Where query works much like where on an iterable. It returns a list of queries and infinite queries that satisfy the\ngiven test."),(0,r.kt)("p",null,'The example below returns all queries/infinite queries whose key contains the word "Post".'),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: The key on a query object will always be a string")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},'final queries = CachedQuery.instance.whereQuery((query) => query.key.contains("post"));\n')),(0,r.kt)("h2",{id:"re-fetch-invalidate-and-delete"},"Re-fetch, Invalidate and Delete"),(0,r.kt)("p",null,"Use the Cached Query instance to easily invalidate or re-fetch the whole cache or a single key."),(0,r.kt)("p",null,"Refetch multiple queries at once by passing a list of keys."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},'CachedQuery.instance.refetchQueries(["posts"]);\n')),(0,r.kt)("p",null,"Invalidating will mark the specified key as stale. To invalidate the whole cache don't pass a key."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},'CachedQuery.instance.invalidateCache("posts");\n\n// Invalidate the whole cache\nCachedQuery.instance.invalidateCache();\n')),(0,r.kt)("p",null,"Deleting will remove the specified key immediately. To delete the whole cache leave the key as null."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},'// Optionally delete the stored values as well.\nCachedQuery.instance.deleteCache(key: "posts", deleteStorage: true);\n\n// Delete the whole cache\nCachedQuery.instance.deleteCache(deleteStorage: true);\n')),(0,r.kt)("h2",{id:"manually-adding-and-removing-queries"},"Manually Adding and Removing Queries"),(0,r.kt)("p",null,"You can manually add or get a query from the cache, although it is not normally necessary to add as the query will call\nthis for you."),(0,r.kt)("p",null,"To add a query or infinite query to cache: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"CachedQuery.instance.addQuery(query);\n")),(0,r.kt)("p",null,"To get a query or infinite query from cache:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"CachedQuery.instance.getQuery(key);\n")),(0,r.kt)("h2",{id:"updating-the-cache"},"Updating the Cache"),(0,r.kt)("p",null,"It is often useful to be able to update the cache manually, for example, when performing ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/optimistic-updates"},"optimistic updates")),(0,r.kt)("p",null,"Either use ",(0,r.kt)("inlineCode",{parentName:"p"},"updateQuery")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"updateInfiniteQuery")," to update a query. Any changes will be emitted down the query stream.\nBoth update functions require a key and a callback which will be passed the current data and return the result."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},'CachedQuery.instance.updateInfiniteQuery<List<PostModel>>(\n  key: "posts",\n  updateFn: (old) => [\n    [response, ...old![0]],\n    ...old.sublist(1).toList()\n  ],\n);\n')))}d.isMDXComponent=!0}}]);