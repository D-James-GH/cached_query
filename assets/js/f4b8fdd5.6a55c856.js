"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[964],{3779:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>V,contentTitle:()=>F,default:()=>D,frontMatter:()=>B,metadata:()=>r,toc:()=>R});const r=JSON.parse('{"id":"docs/migration-v2-v3/index","title":"Migrating from 2.x to 3.x","description":"Environment Requirements","source":"@site/docs/docs/02-migration-v2-v3/index.mdx","sourceDirName":"docs/02-migration-v2-v3","slug":"/docs/migration-v2-v3/","permalink":"/docs/migration-v2-v3/","draft":false,"unlisted":false,"editUrl":"https://github.com/D-James-GH/cached_query/tree/main/docs/docs/docs/02-migration-v2-v3/index.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Overview","permalink":"/docs/overview"},"next":{"title":"Quick Start","permalink":"/docs/quick-start"}}');var a=t(4848),s=t(8453),i=t(6540),l=t(8215),o=t(3104),c=t(6347),u=t(205),d=t(7485),h=t(1682),x=t(679);function f(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function g(e){const{values:n,children:t}=e;return(0,i.useMemo)(()=>{const e=n??function(e){return f(e).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r}))}(t);return function(e){const n=(0,h.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function y({queryString:e=!1,groupId:n}){const t=(0,c.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(r),(0,i.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=g(e),[s,l]=(0,i.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a})),[o,c]=y({queryString:t,groupId:r}),[d,h]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,x.Dv)(n);return[t,(0,i.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),f=(()=>{const e=o??d;return p({value:e,tabValues:a})?e:null})();(0,u.A)(()=>{f&&l(f)},[f]);return{selectedValue:s,selectValue:(0,i.useCallback)(e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),h(e)},[c,h,a]),tabValues:a}}var b=t(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function j({className:e,block:n,selectedValue:t,selectValue:r,tabValues:s}){const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),u=e=>{const n=e.currentTarget,a=i.indexOf(n),l=s[a].value;l!==t&&(c(n),r(l))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,a.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:r})=>(0,a.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{i.push(e)},onKeyDown:d,onClick:u,...r,className:(0,l.A)("tabs__item",v.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function T({lazy:e,children:n,selectedValue:t}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===t);return e?(0,i.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,a.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function S(e){const n=m(e);return(0,a.jsxs)("div",{className:(0,l.A)("tabs-container",v.tabList),children:[(0,a.jsx)(j,{...n,...e}),(0,a.jsx)(T,{...n,...e})]})}function q(e){const n=(0,b.A)();return(0,a.jsx)(S,{...e,children:f(e.children)},String(n))}const C={tabItem:"tabItem_Ymn6"};function Q({children:e,hidden:n,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,l.A)(C.tabItem,t),hidden:n,children:e})}function w(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"query-state",children:"Query State"}),"\n",(0,a.jsx)(n.p,{children:"All query, infinite query and mutation states have been changed to sealed classes\nto take advantage of dart 3 pattern matching."}),"\n",(0,a.jsx)(n.p,{children:"There is no longer a query status enum. There is now a matching sealed class, for exaple the query sealed class is:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"class QueryInitial<T> extends QueryStatus<T> {}\nclass QueryLoading<T> extends QueryStatus<T> {}\nclass QuerySuccess<T> extends QueryStatus<T> {}\nclass QueryError<T> extends QueryStatus<T> {}\n"})}),"\n",(0,a.jsx)(n.p,{children:"This change allows for more specific information to be passed with each state, such as the reason for the loading state or the data key being non-nullable in the success state."}),"\n",(0,a.jsx)(n.p,{children:"For convenience you can check the current status of a query using:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"final allStatuses = state.isLoading || state.isInitial || state.isError || state.isSuccess;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,a.jsxs)(q,{groupId:"state-sealed",children:[(0,a.jsx)(Q,{value:"before",label:"Before",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:'class Post extends StatelessWidget {\n    final int id;\n\n    const Post({required this.id, super.key});\n\n    @override\n    Widget build(BuildContext context) {\n        return QueryBuilder<PostModel>(\n        // Can use key if the query already exists.\n        queryKey: service.postKey(id),\n        builder: (context, state) {\n            final data = state.data;\n            if (state.error != null) return Text(state.error.toString());\n\n            if (data == null) return const SizedBox();\n            return Container(\n            margin: const EdgeInsets.all(10),\n            child: Column(\n                children: [\n                    const Text(\n                        "Title",\n                        textAlign: TextAlign.center,\n                        style: TextStyle(fontSize: 20),\n                    ),\n                    Text(\n                        data.title,\n                        textAlign: TextAlign.center,\n                    ),\n                    const Text(\n                        "Body",\n                        textAlign: TextAlign.center,\n                        style: TextStyle(fontSize: 20),\n                    ),\n                    Text(\n                        data.body,\n                        textAlign: TextAlign.center,\n                    ),\n                    ],\n                ),\n            );\n        },\n        );\n    }\n}\n'})})}),(0,a.jsx)(Q,{value:"after",label:"After",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:'class Post extends StatelessWidget {\n  final int id;\n  final bool enabled;\n\n  const Post({Key? key, required this.id, required this.enabled})\n      : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return QueryBuilder<QueryState<PostModel>>(\n      enabled: enabled,\n      // Can use key if the query already exists.\n      queryKey: service.postKey(id),\n      builder: (context, state) {\n        final data = state.data;\n        if (state case QueryError(:final error)) return Text(error.toString());\n        if (data == null) return const SizedBox();\n        return Container(\n          margin: const EdgeInsets.all(10),\n          child: Column(\n            children: [\n              const Text(\n                "Title",\n                textAlign: TextAlign.center,\n                style: TextStyle(fontSize: 20),\n              ),\n              Text(\n                data.title,\n                textAlign: TextAlign.center,\n              ),\n              const Text(\n                "Body",\n                textAlign: TextAlign.center,\n                style: TextStyle(fontSize: 20),\n              ),\n              Text(\n                data.body,\n                textAlign: TextAlign.center,\n              ),\n            ],\n          ),\n        );\n      },\n    );\n  }\n}\n'})})}),(0,a.jsx)(Q,{value:"using-switch",label:"Using Switch",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:'class Post extends StatelessWidget {\n    final int id;\n    final bool enabled;\n\n    const Post({super.key, required this.id, required this.enabled});\n\n    @override\n    Widget build(BuildContext context) {\n        return QueryBuilder<QueryStatus<PostModel>>(\n        enabled: enabled,\n        // Can use key if the query already exists.\n        queryKey: service.postKey(id),\n        builder: (context, state) {\n            return switch (state) {\n                QueryError<PostModel>() =>\n                    Text((state as QueryError).error.toString()),\n                QueryStatus<PostModel>(:final data) when data != null => Container(\n                    margin: const EdgeInsets.all(10),\n                    child: Column(\n                        children: [\n                        const Text("Title",\n                            textAlign: TextAlign.center,\n                            style: TextStyle(fontSize: 20)),\n                        Text(\n                            data.title,\n                            textAlign: TextAlign.center,\n                        ),\n                        const Text(\n                            "Body",\n                            textAlign: TextAlign.center,\n                            style: TextStyle(fontSize: 20),\n                        ),\n                        Text(\n                            data.body,\n                            textAlign: TextAlign.center,\n                        ),\n                        ],\n                    ),\n                    ),\n                _ => const SizedBox(),\n                };\n            },\n        );\n    }\n}\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"The base class for each cachable item is:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"QueryStatus - for single queries."}),"\n",(0,a.jsx)(n.li,{children:"InfiniteQueryStatus - for infinite queries."}),"\n",(0,a.jsx)(n.li,{children:"MutationState - for mutations"}),"\n"]})]})}function A(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(w,{...e})}):w(e)}function I(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"configuration-changes",children:"Configuration Changes"}),"\n",(0,a.jsx)(n.p,{children:"The configuration system has been updated with separate global and query-specific config objects."}),"\n",(0,a.jsx)(n.p,{children:"Classes are now:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"GlobalQueryConfigFlutter"})," - Global config for all queries, infinite queries and mutations. If using Cached Query Flutter."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"QueryConfigFlutter"})," - Query specific config for queries and infinite queries. If using Cached Query Flutter."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"GlobalQueryConfig"})," - Global config for all queries, infinite queries and mutations. If using Cached Query (non-Flutter)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"QueryConfig"})," - Query specific config for queries and infinite queries. If using Cached Query (non-Flutter)."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The local config will still inherit from the global config which is the same as before."}),"\n",(0,a.jsxs)(q,{groupId:"config-changes",children:[(0,a.jsx)(Q,{value:"before",label:"Before",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"void main() {\n  CachedQuery.instance.configFlutter(\n    config: QueryConfigFlutter(\n      refetchDuration: Duration(seconds: 4),\n    ),\n    storage: await CachedStorage.ensureInitialized(),\n  );\n  runApp(MyApp());\n}\n"})})}),(0,a.jsx)(Q,{value:"after",label:"After",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"void main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  CachedQuery.instance.configFlutter(\n    config: GlobalQueryConfigFlutter(\n      refetchOnResume: true,\n    ),\n    storage: await CachedStorage.ensureInitialized(),\n    observers: [\n      Observer(),\n      QueryLoggingObserver(colors: !Platform.isIOS),\n    ],\n  );\n  runApp(const MyApp());\n}\n"})})})]}),"\n",(0,a.jsx)(n.p,{children:"Multiple observers can now be passed to the global config."})]})}function k(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(I,{...e})}):I(e)}function E(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"data-type-changes",children:"Data Type Changes"}),"\n",(0,a.jsxs)(n.p,{children:["Query success state data is now the type of the generic, usually this is a non-null type. If you need nullable data, explicitly pass ",(0,a.jsx)(n.code,{children:"T?"})," as the generic type."]}),"\n",(0,a.jsxs)(q,{groupId:"data-type-changes",children:[(0,a.jsx)(Q,{value:"before",label:"Before",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"QueryBuilder<PostModel>(\n  queryKey: ['post', id],\n  queryFn: () => api.getPost(id),\n  builder: (context, state) {\n    final data = state.data; // data is PostModel?\n    if (data == null) return const SizedBox();\n    return Text(data.title);\n  },\n)\n"})})}),(0,a.jsx)(Q,{value:"after",label:"After",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"QueryBuilder<PostModel>(\n  queryKey: ['post', id],\n  queryFn: () => api.getPost(id),\n  builder: (context, state) {\n    return switch (state) {\n      QuerySuccess<PostModel>(:final data) => Text(data.title), // data is PostModel (non-nullable)\n      QueryError<PostModel>() => Text('Error: ${state.error}'),\n      _ => const SizedBox(),\n    };\n  },\n)\n"})})})]}),"\n",(0,a.jsx)(n.p,{children:"For nullable data, use:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"Query<PostModel?>(\n    ...\n)\n"})})]})}function M(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(E,{...e})}):E(e)}function N(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"query-interface-and-observers",children:"Query Interface and Observers"}),"\n",(0,a.jsxs)(n.p,{children:["The base class for queries is now ",(0,a.jsx)(n.code,{children:"Cachable<T>"}),". This has changed from ",(0,a.jsx)(n.code,{children:"QueryBase<T>"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"class Observer extends QueryObserver {\n  @override\n  void onChange(\n    Cacheable<dynamic> query,\n    QueryState<dynamic> nextState,\n  ) {\n    // Do something when changing\n    super.onChange(query, nextState);\n  }\n}\n"})})]})}function P(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(N,{...e})}):N(e)}const B={},F="Migrating from 2.x to 3.x",V={},R=[{value:"Environment Requirements",id:"environment-requirements",level:2},{value:"Query State",id:"query-state",level:2},{value:"Example",id:"example",level:3},{value:"Configuration Changes",id:"configuration-changes",level:2},{value:"Data Type Changes",id:"data-type-changes",level:2},{value:"Query Interface and Observers",id:"query-interface-and-observers",level:2},{value:"Mutation",id:"mutation",level:2}];function z(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"migrating-from-2x-to-3x",children:"Migrating from 2.x to 3.x"})}),"\n",(0,a.jsx)(n.h2,{id:"environment-requirements",children:"Environment Requirements"}),"\n",(0,a.jsxs)(n.p,{children:["Cached Query 3.0 requires Dart 3.0.0 or higher. Make sure to update your ",(0,a.jsx)(n.code,{children:"pubspec.yaml"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'environment:\n  sdk: ">=3.0.0 <4.0.0"\n'})}),"\n",(0,a.jsx)(A,{}),"\n",(0,a.jsx)(k,{}),"\n",(0,a.jsx)(M,{}),"\n",(0,a.jsx)(P,{}),"\n",(0,a.jsx)(n.h2,{id:"mutation",children:"Mutation"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"queryFn"})," parameter has been renamed to ",(0,a.jsx)(n.code,{children:"mutationFn"})," in the ",(0,a.jsx)(n.code,{children:"Mutation"})," class."]})]})}function D(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(z,{...e})}):z(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var r=t(6540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);